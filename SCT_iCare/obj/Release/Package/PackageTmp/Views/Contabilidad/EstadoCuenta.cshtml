@*XLSX *@
<script type="text/javascript" src="https://unpkg.com/xlsx@0.15.1/dist/xlsx.full.min.js"></script>

@{
    ViewBag.Title = "EstadoCuenta";

    GMIEntities db = new GMIEntities();
    var oUser = (Usuarios)HttpContext.Current.Session["User"];

    //TAMAÑO DE LETRA EN TABLA DE TOTALES
    var Letra = "130%";

    //Fecha del mes.

    int inicioMes = 1;

    int diaMes = DateTime.Today.Day;
    int MES = DateTime.Today.Month;
    int ANIO = DateTime.Today.Year;
    DateTime fechaInicio = DateTime.Today;
    DateTime fechaFinal = DateTime.Today;


    DateTime FECHAI = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), inicioMes);
    DateTime FECHAF = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), diaMes);
    DateTime FECHAFS = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), diaMes);
    TimeSpan difFechas = FECHAF - fechaInicio;

    //VARIABLES DE VIEWBAGS PARA FILTROS
    string canal = "";
    string referido = "";

    //VARIABLES FECHA TABLA
    var fechaTabla = "";
    var fechaTablaAnterior = "";

    //EPIS NO PAGADOS
    int montoPxDia = 0;
    int precioVisual = 0;

    //EPIS PAGADOS
    int precioPVisual = 0;

    //PAGO DE GESTORES
    int pagoVisual = 0;
    var fechadePago = "";

    //PAGO DE GESTORES
    int pagoVisualMA = 0;
    var fechadePagoMA = "";

    //FOOTERS
    int totalEpis = 0;
    int saldoTotalImporte = 0;
    int totalEpisP = 0;
    int saldoTotalP = 0;
    int totalPago = 0;
    int diferenciaTotal = 0;

    //FOOTERS MES ANTERIOR
    int totalEpisMA = 0;
    int saldoTotalImporteMA = 0;
    int totalEpisPMA = 0;
    int montoTotalMa = 0;
    int montoTotalMaP = 0;
    int pagoMAPI = 0;

    //DIAS DE MES
    DateTime fdia1 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 1);
    DateTime fdia1f = fdia1.AddDays(1).AddMinutes(-1);
    DateTime fdia2 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 2);
    DateTime fdia2f = fdia2.AddDays(1).AddMinutes(-1);
    DateTime fdia3 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 3);
    DateTime fdia3f = fdia3.AddDays(1).AddMinutes(-1);
    DateTime fdia4 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 4);
    DateTime fdia4f = fdia4.AddDays(1).AddMinutes(-1);
    DateTime fdia5 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 5);
    DateTime fdia5f = fdia5.AddDays(1).AddMinutes(-1);
    DateTime fdia6 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 6);
    DateTime fdia6f = fdia6.AddDays(1).AddMinutes(-1);
    DateTime fdia7 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 7);
    DateTime fdia7f = fdia7.AddDays(1).AddMinutes(-1);
    DateTime fdia8 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 8);
    DateTime fdia8f = fdia8.AddDays(1).AddMinutes(-1);
    DateTime fdia9 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 9);
    DateTime fdia9f = fdia9.AddDays(1).AddMinutes(-1);
    DateTime fdia10 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 10);
    DateTime fdia10f = fdia10.AddDays(1).AddMinutes(-1);
    DateTime fdia11 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 11);
    DateTime fdia11f = fdia11.AddDays(1).AddMinutes(-1);
    DateTime fdia12 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 12);
    DateTime fdia12f = fdia12.AddDays(1).AddMinutes(-1);
    DateTime fdia13 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 13);
    DateTime fdia13f = fdia13.AddDays(1).AddMinutes(-1);
    DateTime fdia14 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 14);
    DateTime fdia14f = fdia14.AddDays(1).AddMinutes(-1);
    DateTime fdia15 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 15);
    DateTime fdia15f = fdia15.AddDays(1).AddMinutes(-1);
    DateTime fdia16 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 16);
    DateTime fdia16f = fdia16.AddDays(1).AddMinutes(-1);
    DateTime fdia17 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 17);
    DateTime fdia17f = fdia17.AddDays(1).AddMinutes(-1);
    DateTime fdia18 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 18);
    DateTime fdia18f = fdia18.AddDays(1).AddMinutes(-1);
    DateTime fdia19 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 19);
    DateTime fdia19f = fdia17.AddDays(1).AddMinutes(-1);
    DateTime fdia20 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 20);
    DateTime fdia20f = fdia18.AddDays(1).AddMinutes(-1);
    DateTime fdia21 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 21);
    DateTime fdia21f = fdia21.AddDays(1).AddMinutes(-1);
    DateTime fdia22 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 22);
    DateTime fdia22f = fdia22.AddDays(1).AddMinutes(-1);
    DateTime fdia23 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 23);
    DateTime fdia23f = fdia23.AddDays(1).AddMinutes(-1);
    DateTime fdia24 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 24);
    DateTime fdia24f = fdia24.AddDays(1).AddMinutes(-1);
    DateTime fdia25 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 25);
    DateTime fdia25f = fdia25.AddDays(1).AddMinutes(-1);
    DateTime fdia26 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 26);
    DateTime fdia26f = fdia26.AddDays(1).AddMinutes(-1);
    DateTime fdia27 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 27);
    DateTime fdia27f = fdia27.AddDays(1).AddMinutes(-1);
    DateTime fdia28 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 28);
    DateTime fdia28f = fdia28.AddDays(1).AddMinutes(-1);
    DateTime fdia29 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 29);
    DateTime fdia29f = fdia29.AddDays(1).AddMinutes(-1);
    DateTime fdia30 = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), 30);
    DateTime fdia30f = fdia30.AddDays(1).AddMinutes(-1);


    //FECHA ACTUAL
    DateTime FechaAhora = DateTime.Now;

    int insertfor = 0;

    string nombreExcel = "ESTADO DE CUENTA";


    if (ViewBag.FechaInicio != null)
    {
        fechaInicio = Convert.ToDateTime(ViewBag.FechaInicio);
        DateTime parset = fechaInicio.AddMonths(1).AddDays(-1);

        fechaFinal = parset;
        FECHAF = fechaFinal;
        FECHAFS = FECHAF;
    }

    else
    {

        fechaInicio = FECHAI;
        fechaFinal = FECHAF;
        FECHAFS = FECHAF;
        fechaFinal = fechaFinal.AddDays(1).AddMinutes(-1);

    }

    if (ViewBag.FechaFinal != null)
    {
        fechaFinal = Convert.ToDateTime(ViewBag.FechaFinal);
        FECHAFS = fechaFinal;
        fechaFinal = fechaFinal.AddDays(1).AddMinutes(-1);
    }

    else
    {

        fechaFinal = FECHAF;
        FECHAFS = FECHAF;
        fechaFinal = fechaFinal.AddDays(1);

    }

    DateTime fechaInicioMesA = fechaInicio.AddMonths(-1);
    DateTime fechaFinalMesA = fechaInicioMesA.AddMonths(1).AddMinutes(-1);


    //QUERYS TABLA REGISTROS MES ACTUAL

    var modeloNormal = db.Paciente.Join(db.Cita, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).
Join(db.Captura, a => a.M.idPaciente, b => b.idPaciente, (a, b) => new { A = a, B = b }).
Where(s => s.B.EstatusCaptura == "Terminado" && s.A.M.Asistencia == null && s.A.M.FechaCita >= fechaInicio && s.A.M.FechaCita <= fechaFinal
&& s.A.M.TipoTramite != "REVALORACIÓN").OrderBy(o => o.A.M.Cuenta);


    var modeloAlternativo = db.PacienteESP.
Where(s => s.EstatusCaptura == "Terminado" && s.FechaCita >= fechaInicio && s.FechaCita <= fechaFinal
&& s.TipoTramite != "REVALORACIÓN" && s.Asistencia == null).OrderBy(o => o.Cuenta);


    var modeloExcelNormal = db.Paciente.Join(db.Cita, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).
        Join(db.Captura, a => a.M.idPaciente, b => b.idPaciente, (a, b) => new { A = a, B = b }).
        Where(s => s.B.EstatusCaptura == "Terminado" && s.A.M.Asistencia == null && s.A.M.FechaCita >= fechaInicio && s.A.M.FechaCita <= fechaFinal
        && s.A.M.TipoTramite != "REVALORACIÓN").OrderBy(o => o.A.M.Cuenta);


    var modeloExcelAlternativo = db.PacienteESP.
        Where(s => s.EstatusCaptura == "Terminado" && s.FechaCita >= fechaInicio && s.FechaCita <= fechaFinal
        && s.TipoTramite != "REVALORACIÓN" && s.Asistencia == null).OrderBy(o => o.Cuenta);

    var pagosGestores = db.PagosGestores;



    //QUERYS TABLA REGISTROS MES ANTERIOR

    var modeloNormalMA = db.Paciente.Join(db.Cita, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).
Join(db.Captura, a => a.M.idPaciente, b => b.idPaciente, (a, b) => new { A = a, B = b }).
Where(s => s.B.EstatusCaptura == "Terminado" && s.A.M.Asistencia == null && s.A.M.FechaCita >= fechaInicioMesA && s.A.M.FechaCita <= fechaFinalMesA
&& s.A.M.TipoTramite != "REVALORACIÓN").OrderBy(o => o.A.M.Cuenta);


    var modeloAlternativoMA = db.PacienteESP.
        Where(s => s.EstatusCaptura == "Terminado" && s.FechaCita >= fechaInicioMesA && s.FechaCita <= fechaFinalMesA
        && s.TipoTramite != "REVALORACIÓN" && s.Asistencia == null).OrderBy(o => o.Cuenta);


    //QUERYS FILTROS

    //FILTRO CANAL

    if (ViewBag.Canal != "")
    {
        canal = ViewBag.Canal;

        //MODELO DE LOS NORMALES
        modeloNormal = modeloNormal.Where(w => w.B.EstatusCaptura == "Terminado" && w.A.M.Asistencia == null && w.A.M.TipoTramite != "REVALORACIÓN"
        && w.A.M.FechaCita >= fechaInicio && w.A.M.FechaCita <= fechaFinal && w.A.M.CanalTipo.Contains(canal)).OrderBy(o => o.A.M.Cuenta);

        //MODELO ALTERNATIVOS
        modeloAlternativo = modeloAlternativo.Where(w => w.EstatusCaptura == "Terminado" && w.TipoTramite != "REVALORACIÓN"
        && w.FechaCita >= fechaInicio && w.FechaCita <= fechaFinal && w.Asistencia == null && w.CanalTipo.Contains(canal)).OrderBy(o => o.Cuenta);

        //MODELO DE EXCEL NORMALES
        modeloExcelNormal = modeloExcelNormal.Where(w => w.B.EstatusCaptura == "Terminado" && w.A.M.Asistencia == null && w.A.M.TipoTramite != "REVALORACIÓN"
        && w.A.M.FechaCita >= fechaInicio && w.A.M.FechaCita <= fechaFinal && w.A.M.CanalTipo.Contains(canal)).OrderBy(o => o.A.M.Cuenta);

        //MODELO DE EXCEL ALTERNATIVOS
        modeloExcelAlternativo = modeloExcelAlternativo.Where(w => w.EstatusCaptura == "Terminado" && w.TipoTramite != "REVALORACIÓN"
        && w.FechaCita >= fechaInicio && w.FechaCita <= fechaFinal && w.Asistencia == null && w.CanalTipo.Contains(canal)).OrderBy(o => o.Cuenta);

        modeloNormalMA = modeloNormalMA.Where(w => w.B.EstatusCaptura == "Terminado" && w.A.M.Asistencia == null && w.A.M.TipoTramite != "REVALORACIÓN"
       && w.A.M.CanalTipo.Contains(canal)).OrderBy(o => o.A.M.Cuenta);

        modeloAlternativoMA = modeloAlternativoMA.Where(w => w.EstatusCaptura == "Terminado" && w.TipoTramite != "REVALORACIÓN"
        && w.Asistencia == null && w.CanalTipo.Contains(canal)).OrderBy(o => o.Cuenta);
    }


    //FILTRO REFERIDO

    int idReferido = ViewBag.idReferido;

    if (ViewBag.Referido != "" && ViewBag.idReferido != 0)
    {
        referido = ViewBag.Referido;

        //MODELO DE LOS NORMALES
        modeloNormal = modeloNormal.Where(w => w.B.EstatusCaptura == "Terminado" && w.A.M.Asistencia == null && w.A.M.TipoTramite != "REVALORACIÓN"
        && w.A.M.FechaCita >= fechaInicio && w.A.M.FechaCita <= fechaFinal && w.A.M.ReferidoPor.Contains(referido)).OrderBy(o => o.A.M.Cuenta);

        //MODELO ALTERNATIVOS
        modeloAlternativo = modeloAlternativo.Where(w => w.EstatusCaptura == "Terminado" && w.TipoTramite != "REVALORACIÓN"
        && w.FechaCita >= fechaInicio && w.FechaCita <= fechaFinal && w.Asistencia == null && w.ReferidoPor.Contains(referido)).OrderBy(o => o.Cuenta);

        //MODELO DE EXCEL NORMALES
        modeloExcelNormal = modeloExcelNormal.Where(w => w.B.EstatusCaptura == "Terminado" && w.A.M.Asistencia == null && w.A.M.TipoTramite != "REVALORACIÓN"
        && w.A.M.FechaCita >= fechaInicio && w.A.M.FechaCita <= fechaFinal && w.A.M.ReferidoPor.Contains(referido)).OrderBy(o => o.A.M.Cuenta);

        //MODELO DE EXCEL ALTERNATIVOS
        modeloExcelAlternativo = modeloExcelAlternativo.Where(w => w.EstatusCaptura == "Terminado" && w.TipoTramite != "REVALORACIÓN"
        && w.FechaCita >= fechaInicio && w.FechaCita <= fechaFinal && w.Asistencia == null && w.ReferidoPor.Contains(referido)).OrderBy(o => o.Cuenta);

        modeloNormalMA = modeloNormalMA.Where(w => w.B.EstatusCaptura == "Terminado" && w.A.M.Asistencia == null && w.A.M.TipoTramite != "REVALORACIÓN"
         && w.A.M.ReferidoPor.Contains(referido)).OrderBy(o => o.A.M.Cuenta);

        modeloAlternativoMA = modeloAlternativoMA.Where(w => w.EstatusCaptura == "Terminado" && w.TipoTramite != "REVALORACIÓN"
        && w.Asistencia == null && w.ReferidoPor.Contains(referido)).OrderBy(o => o.Cuenta);

    }
}




@*Referencia estilos para ambas tablas*@

<link rel="stylesheet" type="text/css" href="~/Estilo.css">


@*HEADER O ENCABEZADO*@
<br />
<h2 style="color: white"> Estado de Cuenta</h2>
<br />


@*INPUTS DE FILTROS*@
<form class="form-inline" method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/EstadoCuenta")">
    <div>

        @*INPUT FILTRO CANAL*@
        <select name="canal" style="font-size:1.5vh; width: 100px" class="form-control">
            @{
                if (ViewBag.Canal == "")
                {
                    <option value="">CANAL</option>
                }
                else
                {
                    <option value="@canal">@canal.ToUpper()</option>
                }
            }
            @{
                foreach (var item in db.Canales)
                {
                    <option value="@item.NombreCanal">@item.NombreCanal</option>
                }
            }
            <option value="">TODOS</option>
        </select>


        @*INPUT FILTRO REFERIDO*@
        <select name="referido" style="font-size: 1.5vh; width: 130px" class="form-control">
            @{
                if (ViewBag.Referido == "" || ViewBag.Referido == null)
                {
                    <option value="">REFERIDO POR</option>
                }
                else
                {
                    <option value="@referido">@referido</option>
                }
            }
            @foreach (var item in db.Referido.OrderBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                <option value="@item.idReferido">@item.Nombre -- @item.Tipo</option>
            }
            <option value="">TODOS</option>
        </select>


        @*INPUT FILTROS DE FECHA POR MES*@

        @{

            DateTime ViewBagFechaInicio = Convert.ToDateTime(ViewBag.fechaInicio);
            var SetFechaInicio = ViewBagFechaInicio.Date.ToString("yyyy-MM");

            if (ViewBag.fechaInicio != null)
            {

                <input type="month" name="fechaInicio" class="form-control" value="@SetFechaInicio" style="width: 160px;" />

            }

            else

            {

                <input type="month" name="fechaInicio" class="form-control" value="" style="width: 160px;" />

            }

        }

        @{

            DateTime ViewBagFechaFinal = Convert.ToDateTime(ViewBag.fechaFinal);
            var SetFechaFinal = ViewBagFechaFinal.Date.ToString("yyyy-MM-dd");

            if (ViewBag.fechaFinal != null)
            {

                <input type="hidden" name="fechaFinal" class="form-control" value="@SetFechaFinal" style="width: 160px;" />

            }

            else

            {

                <input type="hidden" name="fechaFinal" class="form-control" value="" style="width: 160px;" />

            }

        }
        <input type="submit" class="btn btn-info" value="Enviar" />

        <a href="~/Contabilidad/EstadoCuenta">
            <span type="button" class="btn btn-success">Limpiar</span>
        </a>
    </div>
</form>


@*EXPORTAR PDF Y REGRESO A PAGOS*@
<script>
    function ExportToExcel(type, fn, dl)
    {
        var elt = document.getElementById('tbl_exporttable_to_xls');
        var wb = XLSX.utils.table_to_book(elt, { sheet: "sheet1" });
        return dl ?
            XLSX.write(wb, { bookType: type, bookSST: true, type: 'base64' }) :
            XLSX.writeFile(wb, fn || ('@nombreExcel' + ' del @Convert.ToDateTime(fechaInicio).ToString("dd-MM-yy")' + ' al @Convert.ToDateTime(fechaFinal).AddDays(-1).ToString("dd-MM-yy").' + (type || 'xlsx')));
    }
</script>



|   <div>
    <a href="~/Contabilidad/Pagos">
        <span type="button" class="btn btn-success" style="background-color:dodgerblue">Regresar a Control de Pagos</span>
    </a>
    @*<button style="background-color:limegreen" class="btn btn-info dropdown-toggle" onclick="ExportToExcel('xlsx')">Descargar reporte </button>*@
</div>
<br />



@*TABLA INICIAL/ TABLA QUE DICE ALTERNATIVOS/ENCABEZADOS DE LAS DEMAS TABLAS*@
<div>
    <table>
        <thead>
            <tr>
                <th style="background-color: dodgerblue;" colspan="2"></th>
                <th style="background-color: dodgerblue; " colspan="3">ALTERNATIVOS</th>
                <th style="background-color: dodgerblue; " colspan="2"></th>
            </tr>
            <tr>
                <th style="background-color: antiquewhite;" scope="col">Fecha</th>
                <th style="background-color: antiquewhite;" scope="col">Epis</th>
                <th style="background-color: antiquewhite;" scope="col">Importe</th>
                <th style="background-color: antiquewhite;" scope="col">Epis P</th>
                <th style="background-color: antiquewhite;" scope="col">Importe</th>
                <th style="background-color: antiquewhite;" scope="col">Importe Pagos</th>
                <th style="background-color: antiquewhite;" scope="col">Banco/Efectivo</th>
            </tr>
        </thead>
    </table>
</div>



@*TABLA PRIMERA SECCION PAGOS SALDO POR MES ANTERIOR*@
@{
    if (fechaInicioMesA.Month >= 6 && fechaInicioMesA.Year >= 2022 && ViewBag.Referido != null && ViewBag.Referido != "" && canal != "IN SITU" && canal != "GESTOR ALT" && canal != null && canal != "")
    {
        var epiFinalMA = (from i in modeloNormalMA where i.A.M.FechaCita >= fechaInicioMesA && i.A.M.FechaCita <= fechaFinalMesA select i).OrderByDescending(q => q.A.M.FechaCita).FirstOrDefault();
        var epiFinalMACOUNT = (from i in modeloNormalMA where i.A.M.FechaCita >= fechaInicioMesA && i.A.M.FechaCita <= fechaFinalMesA select i).Count();
        var epiFinalMATotal = (from i in modeloNormalMA where i.A.M.FechaCita >= fechaInicioMesA && i.A.M.FechaCita <= fechaFinalMesA select i);
        var epiFinalMATotalP = (from i in modeloNormalMA where i.A.M.FechaCita >= fechaInicioMesA && i.A.M.FechaCita <= fechaFinalMesA && (i.A.M.Cuenta == "BANCOS" || i.A.M.Cuenta == "CONEKTA") select i);


        if (epiFinalMACOUNT != 0)
        {
            //TOTALES DE EPIS
            foreach (var zero in epiFinalMATotal)
            {
                montoTotalMa += Convert.ToInt32(zero.A.M.PrecioEpi);
            }

            //TOTALES DE EPIS PAGADOS
            foreach (var zeroP in epiFinalMATotalP)
            {
                montoTotalMaP += Convert.ToInt32(zeroP.A.M.PrecioEpi);
            }

            //VARIABLES PARA FECHAS
            var fechaTablaMA = Convert.ToDateTime(epiFinalMA.A.M.FechaCita).ToString("dd-MMMM-yy");
            DateTime fechaInicioDiaMA = Convert.ToDateTime(fechaTablaMA);
            DateTime fechaFinalDiaMA = fechaInicioDiaMA.AddHours(23).AddMinutes(59);

            //CONTEO DE EPIS TOTALES MES ANTERIOR
            int conteoEpisTotalesMA = (from i in modeloNormalMA where i.A.M.FechaCita >= fechaInicioMesA && i.A.M.FechaCita <= fechaFinalMesA select i).Count();

            //CONTEO DE EPIS PAGADOS
            int conteoEpisPTotalesMA = (from i in modeloNormalMA where i.A.M.FechaCita >= fechaInicioMesA && i.A.M.FechaCita <= fechaFinalMesA && (i.A.M.Cuenta == "BANCOS" || i.A.M.Cuenta == "CONEKTA") select i).Count();

            //VARIABLES PARA PAGOS EFECTUADOS EN MODULO DE PAGOS
            var pagoGestor = (from i in pagosGestores where i.Gestor == epiFinalMA.A.M.ReferidoPor && i.Fecha >= fechaInicioMesA && i.Fecha <= fechaFinalMesA select i);

            foreach (var zeroMAPI in pagoGestor)
            {
                pagoMAPI += Convert.ToInt32(zeroMAPI.PagoIngresado);
            }

            <table cellpadding="0" cellspacing="0" class="table  table-hover tablas table-bordered" style="color: #2F2D6B">
                <thead style="color:white">
                    <tr>
                        <th style="background-color: gray;" colspan="2"></th>
                        <th style="background-color: gray; " colspan="3">Operaciones de @fechaInicioMesA.ToString("MMMM")</th>
                        <th style="background-color: gray; " colspan="2"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @*FECHA DE CITA*@
                        <td>
                            <span>@fechaTablaMA</span>
                        </td>

                        @*NUMERO DE EPIS X DIA EN FECHA*@
                        <td>
                            <span>@conteoEpisTotalesMA</span>
                        </td>

                        @*IMPORTE*@
                        @{
                            <td>
                                <span>@montoTotalMa.ToString("###,###,###,###")</span>
                            </td>
                            montoTotalMa = 0;
                        }

                        @*EPIS PAGADOS*@

                        <td>
                            <span>@conteoEpisPTotalesMA</span>
                        </td>

                        @*IMPORTE EPIS PAGADOS*@
                        @{
                            <td>
                                <span>@montoTotalMaP.ToString("###,###,###,###")</span>
                            </td>
                            montoTotalMaP = 0;
                        }

                        @*IMPORTE MODULO DE PAGOS*@
                        @{
                            <td>
                                <span>@pagoMAPI.ToString("###,###,###,###")</span>
                            </td>
                            pagoMAPI = 0;
                        }

                        <td>
                        </td>


                    </tr>
                </tbody>
            </table>
        }
    }

    else if (fechaInicioMesA.Month >= 6 && fechaInicioMesA.Year >= 2022 && ViewBag.Referido != null && ViewBag.Referido != "" && (canal != "IN SITU" || canal == "GESTOR ALT" && canal != null && canal != ""))
    {
        var epiFinalMA = (from i in modeloAlternativoMA where i.FechaCita >= fechaInicioMesA && i.FechaCita <= fechaFinalMesA select i).OrderByDescending(q => q.FechaCita).FirstOrDefault();
        var epiFinalMACOUNT = (from i in modeloAlternativoMA where i.FechaCita >= fechaInicioMesA && i.FechaCita <= fechaFinalMesA select i).Count();
        var epiFinalMATotal = (from i in modeloAlternativoMA where i.FechaCita >= fechaInicioMesA && i.FechaCita <= fechaFinalMesA select i);
        var epiFinalMATotalP = (from i in modeloAlternativoMA where i.FechaCita >= fechaInicioMesA && i.FechaCita <= fechaFinalMesA && (i.Cuenta == "BANCOS" || i.Cuenta == "CONEKTA") select i);


        if (epiFinalMACOUNT != 0)
        {

            //TOTALES DE EPIS
            foreach (var zero in epiFinalMATotal)
            {
                montoTotalMa += Convert.ToInt32(zero.PrecioEpi);
            }

            //TOTALES DE EPIS PAGADOS
            foreach (var zeroP in epiFinalMATotalP)
            {
                montoTotalMaP += Convert.ToInt32(zeroP.PrecioEpi);
            }

            //VARIABLES PARA FECHAS
            var fechaTablaMA = Convert.ToDateTime(epiFinalMA.FechaCita).ToString("dd-MMMM-yy");
            DateTime fechaInicioDiaMA = Convert.ToDateTime(fechaTablaMA);
            DateTime fechaFinalDiaMA = fechaInicioDiaMA.AddHours(23).AddMinutes(59);

            //CONTEO DE EPIS TOTALES MES ANTERIOR
            int conteoEpisTotalesMA = (from i in modeloAlternativoMA where i.FechaCita >= fechaInicioMesA && i.FechaCita <= fechaFinalMesA select i).Count();

            //CONTEO DE EPIS PAGADOS
            int conteoEpisPTotalesMA = (from i in modeloAlternativoMA where i.FechaCita >= fechaInicioMesA && i.FechaCita <= fechaFinalMesA && (i.Cuenta == "BANCOS" || i.Cuenta == "CONEKTA") select i).Count();

            //VARIABLES PARA PAGOS EFECTUADOS EN MODULO DE PAGOS
            var pagoGestor = (from i in pagosGestores where i.Gestor == epiFinalMA.ReferidoPor && i.Fecha >= fechaInicioMesA && i.Fecha <= fechaFinalMesA select i);

            foreach (var pagos in pagoGestor)
            {
                pagoVisualMA += Convert.ToInt32(pagos.PagoIngresado);
                fechadePagoMA = Convert.ToDateTime(pagos.Fecha).ToString("dd-MMMM-yy");
            }

            <table cellpadding="0" cellspacing="0" class="table  table-hover tablas table-bordered" style="color: #2F2D6B">
                <thead style="color:white">
                    <tr>
                        <th style="background-color: gray;" colspan="2"></th>
                        <th style="background-color: gray; " colspan="3">Operaciones de @fechaInicioMesA.ToString("MMMM")</th>
                        <th style="background-color: gray; " colspan="2"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @*FECHA DE CITA*@
                        <td>
                            <span>@fechaTablaMA</span>
                        </td>

                        @*NUMERO DE EPIS X DIA EN FECHA*@
                        <td>
                            <span>@conteoEpisTotalesMA</span>
                        </td>

                        @*IMPORTE*@
                        @{
                            <td>
                                <span>@montoTotalMa.ToString("###,###,###,###")</span>
                            </td>
                            montoTotalMa = 0;
                        }

                        @*EPIS PAGADOS*@

                        <td>
                            <span>@conteoEpisPTotalesMA</span>
                        </td>

                        @*IMPORTE EPIS PAGADOS*@
                        @{
                            <td>
                                <span>@montoTotalMaP.ToString("###,###,###,###")</span>
                            </td>
                            montoTotalMaP = 0;
                        }

                        @*IMPORTE MODULO DE PAGOS*@
                        @{
                            <td>
                                <span>@pagoMAPI.ToString("###,###,###,###")</span>
                            </td>
                            pagoMAPI = 0;
                        }

                        <td>
                        </td>

                    </tr>
                </tbody>
            </table>
        }
    }
}


@*TABLA DE PAGOS DEL MES ACTUAL*@
@{
    if (canal != "IN SITU" && canal != "GESTOR ALT" && canal != null && canal != "")
    {
        <div>
            <table cellpadding="0" cellspacing="0" class="table  table-hover tablas table-bordered" style="color: #2F2D6B">
                <thead style="color:white">
                    <tr>
                        <th style="background-color: gray;" colspan="2"></th>
                        <th style="background-color: gray; " colspan="3">Operaciones de @fechaInicio.ToString("MMMM")</th>
                        <th style="background-color: gray; " colspan="2"></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var item in modeloNormal.OrderBy(q => q.A.M.FechaCita))
                        {
                            //VARIABLES PARA FECHAS
                            fechaTabla = Convert.ToDateTime(item.A.M.FechaCita).ToString("dd-MMMM-yy");
                            var parseFechaInicial = DateTime.Parse(fechaTabla);
                            var parseFechaFinal = DateTime.Parse(fechaTabla).AddHours(23).AddMinutes(59);

                            //CONTEO DE EPIS TOTALES
                            int conteoEpisTotales = (from i in modeloNormal where i.A.M.FechaCita >= parseFechaInicial && i.A.M.FechaCita <= parseFechaFinal select i).Count();
                            var episXDia = (from i in modeloNormal where i.A.M.FechaCita >= parseFechaInicial && i.A.M.FechaCita <= parseFechaFinal select i);

                            //CONTEO DE EPIS TOTALES PAGADOS
                            int conteoEpisPTotales = (from i in modeloNormal where i.A.M.FechaCita >= parseFechaInicial && i.A.M.FechaCita <= parseFechaFinal && (i.A.M.Cuenta == "BANCOS" || i.A.M.Cuenta == "CONEKTA") select i).Count();

                            //VARIABLES PARA PAGOS EFECTUADOS EN MODULO DE PAGOS
                            var pagoGestor = (from i in pagosGestores where i.Gestor == item.A.M.ReferidoPor && i.Fecha >= parseFechaInicial && i.Fecha <= parseFechaFinal select i);

                            if (fechaTablaAnterior != fechaTabla)
                            {
                                totalEpis = (from i in modeloNormal select i).Count();

                                //SUMA DE PRECIOS EPIS X DIA
                                foreach (var precio in episXDia)
                                {
                                    montoPxDia += Convert.ToInt32(precio.A.M.PrecioEpi);
                                }

                                saldoTotalImporte += precioVisual;
                                totalEpisP = (from i in modeloNormal where (i.A.M.Cuenta == "BANCOS" || i.A.M.Cuenta == "CONEKTA") select i).Count(); ;
                                saldoTotalP += precioPVisual;
                                totalPago += pagoVisual;

                                foreach (var pagos in pagoGestor)
                                {
                                    pagoVisual += Convert.ToInt32(pagos.PagoIngresado);
                                    fechadePago = Convert.ToDateTime(pagos.Fecha).ToString("dd-MMMM-yy");
                                }

                                totalPago += pagoVisual;
                                diferenciaTotal = saldoTotalImporte - (saldoTotalP + totalPago);

                                <tr style="height: auto">

                                    @*FECHA DE CITA*@
                                    <td>
                                        <span>@fechaTabla</span>
                                    </td>

                                    @*NUMERO DE EPIS X DIA EN FECHA*@
                                    <td>
                                        <span>@conteoEpisTotales</span>
                                    </td>

                                    @*IMPORTE*@
                                    <td>
                                        <span>$@montoPxDia.ToString("###,###,###,###")</span>
                                    </td>

                                    @*EPIS PAGADOS*@

                                    @{
                                        if (conteoEpisPTotales != 0)
                                        {
                                            <td>
                                                <span>@conteoEpisPTotales</span>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                            </td>
                                        }
                                    }

                                    @*IMPORTE EPIS PAGADOS*@

                                    @{
                                        if (conteoEpisPTotales != 0)
                                        {
                                            <td>
                                                <span>$@precioPVisual.ToString("###,###,###,###")</span>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                            </td>
                                        }
                                    }

                                    @*IMPORTE MODULO DE PAGOS*@

                                    @{
                                        if (fechaTabla == fechadePago)
                                        {
                                            <td>
                                                <span>$@pagoVisual.ToString("###,###,###,###")</span>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                            </td>
                                        }

                                    }

                                    <td>
                                    </td>
                                </tr>

                                fechaTablaAnterior = fechaTabla;
                                montoPxDia = 0;
                                precioVisual = 0;
                                pagoVisual = 0;
                            }
                        }
                        <tr>

                            @*FECHA DE CITA*@
                            <td>
                            </td>

                            @*NUMERO DE EPIS X DIA EN FECHA*@
                            <td>
                            </td>

                            @*IMPORTE*@
                            <td>
                            </td>

                            @*EPIS PAGADOS*@
                            <td>
                            </td>

                            @*IMPORTE EPIS PAGADOS*@

                            <td>
                            </td>

                            @*IMPORTE MODULO DE PAGOS*@

                            <td>
                            </td>

                            @*BANCOS*@

                            <td>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
            @{
                if (fechaTabla != null && fechaTabla != "")
                {
                    <table cellpadding="0" cellspacing="0" class="table  table-hover tablas table-bordered" style="background-color:transparent; border-color:transparent">
                        <thead style="border: none; background-color:transparent">
                            <tr style="border: none; background-color:transparent">

                                @*FOOTTER  MES ACTUAL*@{}
                                <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">@Convert.ToDateTime(fechaTabla).ToString("MMMM").ToUpper()</b></th>


                                @*FOOTTER  EPIS TOTALES*@
                                <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">@totalEpis</b></th>


                                @*FOOTTER  IMPORTE TOTAL*@
                                <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">$@saldoTotalImporte.ToString("###,###,###,###")</b></th>


                                @*FOOTTER  EPIS CONCILIADOS TOTALES*@
                                @{
                                    if (totalEpisP != 0)
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">@totalEpisP</b></th>
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }

                                @*FOOTTER IMPORTE DE  EPIS CONCILIADOS TOTALES*@
                                @{
                                    if (saldoTotalP != 0)
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">$@saldoTotalP.ToString("###,###,###,###")</b></th>
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }

                                @*FOOTTER  PAGOS INGRESADOS TOTALES*@
                                @{
                                    if (totalPago != 0)
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size:@Letra">$@totalPago.ToString("###,###,###,###")</b></th>
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }

                                @*FOOTTER  DIFERENCIA DE PAGOS*@
                                @{
                                    if (diferenciaTotal != 0)
                                    {
                                        if (diferenciaTotal < 0)
                                        {
                                            diferenciaTotal = diferenciaTotal * (-1);
                                            <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size:@Letra">($@diferenciaTotal.ToString("###,###,###,###"))</b></th>
                                        }
                                        else if (diferenciaTotal > 0)
                                        {
                                            <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size:@Letra">$@diferenciaTotal.ToString("###,###,###,###")</b></th>
                                        }
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }
                            </tr>
                        </thead>

                        @*DIFERENCIAS DE MES*@
                        <tbody>
                            <tr style="border: none; background-color:transparent">

                                @*FOOTTER  MES PASADO*@
                                <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">Sumas:</b></th>


                                @*FOOTTER  EPIS TOTALES PASADO*@

                                @{var finalTotal = totalEpis + totalEpisMA;
                                    <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">@finalTotal</b></th>
                                }

                                @*FOOTTER  IMPORTE TOTAL PASADO*@

                                @{var importeTotal = saldoTotalImporte + saldoTotalImporteMA;
                                    <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">$@importeTotal.ToString("###,###,###,###")</b></th>
                                }

                                @*FOOTTER  EPIS CONCILIADOS TOTALES PASADO*@
                                @{var episPTotales = totalEpisP + totalEpisPMA;
                                    if (totalEpisP != 0)
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">@totalEpisP</b></th>
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }

                                @*FOOTTER IMPORTE DE  EPIS CONCILIADOS TOTALES PASADO*@
                                @{
                                    if (saldoTotalP != 0)
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra">$@saldoTotalP.ToString("###,###,###,###")</b></th>
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }

                                @*FOOTTER  PAGOS INGRESADOS TOTALES PASADO*@
                                @{
                                    if (totalPago != 0)
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size:@Letra">$@totalPago.ToString("###,###,###,###")</b></th>
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }

                                @*FOOTTER  DIFERENCIA DE PAGOS PASADO*@
                                @{
                                    if (diferenciaTotal != 0)
                                    {
                                        if (diferenciaTotal < 0)
                                        {
                                            diferenciaTotal = diferenciaTotal * (-1);
                                            <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size:@Letra">($@diferenciaTotal.ToString("###,###,###,###"))</b></th>
                                        }
                                        else if (diferenciaTotal < 0)
                                        {
                                            <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size:@Letra">$@diferenciaTotal.ToString("###,###,###,###")</b></th>
                                        }
                                    }
                                    else
                                    {
                                        <th style="background-color: aliceblue; border: none; background-color:transparent"><b style="color:aliceblue; font-size: @Letra"></b></th>
                                    }
                                }
                            </tr>
                        </tbody>
                    </table>
                }
                else
                {
                    <h1 style="background-color: aliceblue; border: none; background-color:transparent; text-align:center"><b style="color:aliceblue;">NO HAY MOVIMIENTOS DE ESTE MES</b></h1>
                }
            }
        </div>
    }

}

