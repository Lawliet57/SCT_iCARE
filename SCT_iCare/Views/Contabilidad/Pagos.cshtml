@*XLSX *@
<script type="text/javascript" src="https://unpkg.com/xlsx@0.15.1/dist/xlsx.full.min.js"></script>

@{
    ViewBag.Title = "Pagos";

    GMIEntities db = new GMIEntities();
    var oUser = (Usuarios)HttpContext.Current.Session["User"];


    //Fecha del mes.

    int inicioMes = 1;

    int diaMes = DateTime.Today.Day;
    int MES = DateTime.Today.Month;
    int ANIO = DateTime.Today.Year;

    DateTime FECHAI = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), inicioMes);
    DateTime FECHAF = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), diaMes);
    DateTime FECHAFS = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32(MES), diaMes);
    DateTime fechaInicioModulo = new DateTime(Convert.ToInt32(ANIO), Convert.ToInt32("6"), inicioMes);

    DateTime fechaInicio = DateTime.Today;
    DateTime fechaFinal = DateTime.Today;
    DateTime FechaAhora = DateTime.Now;

    int deuda = 0;
    int deudaAereos = 0;
    int deudaTotal = 0;
    int deuda1 = 0;
    int deudaAereos1 = 0;
    int deudaTotal1 = 0;
    int saldo = 0;
    int saldoMesN = 0;
    int saldoMesA = 0;
    int saldoTotalA = 0;
    int saldoTotalN = 0;
    int pago = 0;
    int pagoAereos = 0;
    int pagoTotal = 0;
    int pago1 = 0;
    int pagoAereos1 = 0;
    int pagoTotal1 = 0;
    string referido = "";
    string tipoReferido = "";
    int ingresoActual = 0;
    int ingresoActualAlt = 0;
    int ingresosTotalesA = 0;
    int ingresosTotalesN = 0;
    int sumaDePrecios = 0;
    int sumaDePreciosP = 0;
    int saldoTv1 = 0;
    int saldoTv1N = 0;
    int sumaPagadosTAlt = 0;
    int sumaPagadosTN = 0;

    if (ViewBag.FechaInicio != null)
    {
        fechaInicio = Convert.ToDateTime(ViewBag.FechaInicio);
        DateTime parset = fechaInicio.AddMonths(1).AddDays(-1);

        fechaFinal = parset;
        FECHAF = fechaFinal;
        FECHAFS = FECHAF;
    }

    else
    {

        fechaInicio = FECHAI;
        fechaFinal = FECHAF;
        FECHAFS = FECHAF;
        fechaFinal = fechaFinal.AddDays(1);

    }

    if (ViewBag.Canal != "" || ViewBag.Canal != null)
    {
        tipoReferido = ViewBag.Canal;
    }

    else
    {
        tipoReferido = "";
    }

    if (ViewBag.Referido == "" || ViewBag.Referido == null)
    {
        referido = ViewBag.Referido;
    }

    else
    {
        referido = "";
    }

    //QUERYS TABLA REGISTROS

    var modelo = db.Paciente.Join(db.Cita, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).
Join(db.Captura, a => a.M.idPaciente, b => b.idPaciente, (a, b) => new { A = a, B = b }).
Where(s => s.B.EstatusCaptura == "Terminado" && s.A.M.Asistencia == null && s.A.M.CanalTipo.Contains(tipoReferido) && s.A.M.ReferidoPor.Contains(referido) && s.A.M.TipoTramite != "REVALORACIÓN").OrderBy(o => o.A.M.Cuenta);

    var pGestor = db.PagosGestores;

    //INGRESO DE PAGOS
    var ingresoNormales = db.PagosGestores.
Where(z => z.Gestor.Contains(referido));


    var modelo1 = db.PacienteESP.
Where(s => s.ReferidoPor.Contains(referido) && s.CanalTipo.Contains(tipoReferido) && s.EstatusCaptura == "Terminado"
&& s.TipoTramite != "REVALORACIÓN" && s.Asistencia == null).OrderBy(o => o.Cuenta);


    var modeloExcel = db.Paciente.Join(db.Cita, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).
        Join(db.Captura, a => a.M.idPaciente, b => b.idPaciente, (a, b) => new { A = a, B = b }).
        Where(s => s.B.EstatusCaptura == "Terminado" && s.A.M.Asistencia == null && s.A.M.CanalTipo.Contains(tipoReferido) && s.A.M.ReferidoPor.Contains(referido) && s.A.M.TipoTramite != "REVALORACIÓN").OrderBy(o => o.A.M.Cuenta);

    var modeloExcel1 = db.PacienteESP.
Where(s => s.ReferidoPor.Contains(referido) && s.CanalTipo.Contains(tipoReferido) && s.EstatusCaptura == "Terminado"
&& s.TipoTramite != "REVALORACIÓN" && s.Asistencia == null).OrderBy(o => o.Cuenta);

    var referidoAlt = db.Referido.
        Where(s => s.Tipo == "GESTOR ALT" || s.Tipo == "IN SITU");

    var referidoN = db.Referido.
        Where(s => s.Tipo != "GESTOR ALT" && s.Tipo != "IN SITU");

}

<br />
<h2 style="color: white">Control Pagos</h2>
<h5 style="color: white">Resultados del día @fechaInicio.ToString("dd-MMMM-yyyy") al día @FECHAFS.ToString("dd-MMMM-yyyy")</h5>
<br />

<form class="form-inline" method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/Pagos")">
    <div>



        <select name="canal" style="font-size:1.5vh; width: 100px" class="form-control">
            @{
                if (ViewBag.Canal == "" || ViewBag.Canal == null)
                {
                    <option value="">CANAL</option>
                }
                else
                {
                    <option value="@tipoReferido">@tipoReferido.ToUpper()</option>
                }
            }
            @{
                foreach (var item in db.Canales)
                {
                    <option value="@item.NombreCanal">@item.NombreCanal</option>
                }
            }
            <option value="">TODOS</option>
        </select>



        <select name="referido" style="font-size: 1.5vh; width: 130px" class="form-control">
            @{
                if (ViewBag.Referido == "" || ViewBag.Referido == null)
                {
                    <option value="">REFERIDO POR</option>
                }
                else
                {
                    <option value="@referido">@referido.ToUpper()</option>
                }
            }
            @foreach (var item in db.Referido.OrderBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                <option value="@item.idReferido">@item.Nombre -- @item.Tipo</option>
            }
            <option value="">TODOS</option>
        </select>


        @*FILTROS DE FECHA POR MES*@

        @{

            DateTime ViewBagFechaInicio = Convert.ToDateTime(ViewBag.fechaInicio);
            var SetFechaInicio = ViewBagFechaInicio.Date.ToString("yyyy-MM");

            if (ViewBag.fechaInicio != null)
            {

                <input type="month" name="fechaInicio" class="form-control" value="@SetFechaInicio" style="width: 160px;" />

            }

            else

            {

                <input type="month" name="fechaInicio" class="form-control" value="" style="width: 160px;" />

            }

        }

        @{

            DateTime ViewBagFechaFinal = Convert.ToDateTime(ViewBag.fechaFinal);
            var SetFechaFinal = ViewBagFechaFinal.Date.ToString("yyyy-MM-dd");

            if (ViewBag.fechaFinal != null)
            {

                <input type="hidden" name="fechaFinal" class="form-control" value="@SetFechaFinal" style="width: 160px;" />

            }

            else

            {

                <input type="hidden" name="fechaFinal" class="form-control" value="" style="width: 160px;" />

            }

        }

        <input type="submit" class="btn btn-info" value="Enviar" />

        <a href="~/Contabilidad/Pagos">
            <span type="button" class="btn btn-success">Limpiar</span>
        </a>

    </div>
    <br />

</form>

<script>

    function ExportToExcel(type, fn, dl)
    {
        var elt = document.getElementById('Excel');
        var wb = XLSX.utils.table_to_book(elt, { sheet: "sheet1" });
        return dl ?
            XLSX.write(wb, { bookType: type, bookSST: true, type: 'base64' }) :
            XLSX.writeFile(wb, fn || ('Pagos' + ' del @Convert.ToDateTime(fechaInicio).ToString("dd-MM-yy")' + ' al @Convert.ToDateTime(fechaFinal).AddDays(-1).ToString("dd-MM-yy").' + (type || 'xlsx')));
    }

</script>

<div>
    <button style="background-color:limegreen" class="btn btn-info dropdown-toggle" onclick="ExportToExcel('xlsx')">Exportar Datos a XLSX</button>
</div>


<br />
<div class="tablaScroll" style="min-height: 300px; max-height:450px">
    <table class="table  table-hover tablas table-bordered" style="color: #2F2D6B">
        <thead style="color:white">
            <tr>
                <th>Gestor/Canal</th>
                <th>EPIs Totales</th>
                <th>Importe</th>
                <th>Pago</th>
                <th>Ingresos del Mes</th>
                <th>Saldo del Mes</th>
                <th>Ingresos Totales</th>
                <th>Saldo Total</th>
                <th>Estatus</th>
                <th></th>
            </tr>
        </thead>

        @*AQUI EMPIEZA LA TABLA DE EPIS ALTERNATIVOS*@
        @{
            foreach (var itemd in referidoAlt.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullosAlt = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                if (gestoresNoNullosAlt != 0)
                {

                    <tr>
                        <td>
                            <b>@itemd.Nombre</b><span style="font-size:xx-small"> @itemd.Tipo</span>
                        </td>

                        @{
                            var precioEpisGeneral = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i);

                            foreach (var kalaka in precioEpisGeneral)
                            {
                                sumaDePrecios += Convert.ToInt32(kalaka.PrecioEpi);
                            }

                            //NUMERO DE EPIS 
                            int episGestor = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                                <td><span>@episGestor</span></td>
                                <td><span> $@sumaDePrecios.ToString("###,###,###,###")</span></td>

                           }

                        @*PAGO*@
                    <td>
                        @{
                            var precioEpisGeneralP = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado"  && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i);

                            foreach (var kalaka in precioEpisGeneralP)
                            {
                                sumaDePreciosP += Convert.ToInt32(kalaka.PrecioEpi);
                            }

                            if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                            {

                                saldoMesN = sumaDePrecios;

                                <span>$@saldoMesN.ToString("###,###,###,###")</span>

                            }

                            else
                            {
                                if (sumaDePreciosP == 0)
                                {
                                    <span>$</span>
                                    <span>-----</span>
                                }

                                else
                                {
                                    <span> $@sumaDePreciosP.ToString("###,###,###,###")</span>
                                }

                            }
                        }
                    </td>

                        @*INGRESO DEL MES*@
                        <td>
                            @{

                                var pG = (from i in db.PagosGestores where i.idReferido == itemd.idReferido && i.Fecha >= fechaInicio && i.Fecha < fechaFinal select i);

                                foreach (var pagosGes in pG)
                                {

                                    ingresoActualAlt += Convert.ToInt32(pagosGes.PagoIngresado);

                                }

                                <span>$@ingresoActualAlt.ToString("###,###,###,###")</span>

                            }
                        </td>

                        @*SALDO DEL MES*@
                        <td>
                             @{
                                 saldoMesN = (ingresoActualAlt + sumaDePreciosP) - sumaDePrecios;

                                 if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                                 {

                                     saldoMesN = 0;

                                    <span>$@saldoMesN.ToString("###,###,###,###")</span>

                                 }

                                 else
                                 {
                                     if (saldoMesN < 0)
                                     {
                                         saldoMesN = saldoMesN * (-1);

                                        <span>($@saldoMesN.ToString("###,###,###,###"))</span>
                                     }

                                     else
                                     {
                                        <span>$@saldoMesN.ToString("###,###,###,###")</span>

                                     }

                                 }

                                 ingresoActualAlt = 0;

                            }
                        </td>

                        @*INGRESOS TOTALES*@
                        <td>
                            @{
                                var ingresosTotalesAlt = (from i in db.Referido where i.idReferido == itemd.idReferido select i);

                                foreach (var ingresosTALT in ingresosTotalesAlt)
                                {

                                    ingresosTotalesA = Convert.ToInt32(ingresosTALT.Efectivo);

                                }

                                <span>$@ingresosTotalesA.ToString("###,###,###,###")</span>
                                }
                        </td>

                        @*SALDO TOTAL*@
                        <td>
                            @{
                                var sT = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicioModulo select i);

                                foreach (var saldoTT in sT)
                                {
                                    saldoTv1 += Convert.ToInt32(saldoTT.PrecioEpi);
                                }

                                var precioEpisGeneralPTotales = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") && i.FechaCita >= fechaInicioModulo select i);

                                foreach (var kalaka in precioEpisGeneralPTotales)
                                {
                                    sumaPagadosTAlt += Convert.ToInt32(kalaka.PrecioEpi);
                                }

                                saldoTotalA = (ingresosTotalesA + sumaPagadosTAlt) - saldoTv1 ;

                                if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                                {

                                    saldoTotalA = 0;

                                    <span>$@saldoTotalA.ToString("###,###,###,###")</span>

                                }

                                else
                                {
                                    if (saldoTotalA < 0)
                                    {
                                        saldoTotalA = saldoTotalA * (-1);
                                        <span>($@saldoTotalA.ToString("###,###,###,###"))</span>
                                    }

                                    else
                                    {
                                        <span>$@saldoTotalA.ToString("###,###,###,###")</span>

                                     }

                                 }

                            }
                        </td>

                        <td>

                            @{
                                var estatus = from i in db.PacienteESP where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                                string texto = "";

                                foreach (var i in estatus)
                                {
                                    if (i.FechaCita < DateTime.Today.AddDays(-30))
                                    {
                                        texto = "text-danger";
                                        break;
                                    }
                                    else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                    {
                                        texto = "text-warning";
                                        break;
                                    }
                                    else
                                    {
                                        texto = "text-success";
                                        break;
                                    }
                                }

                                <div style="width:2px;"></div>
                                <span class="@texto">•</span>

                                sumaDePrecios = 0;
                                sumaDePreciosP = 0;
                                saldoTv1 = 0;
                                sumaPagadosTAlt = 0;

                            }

                        </td>

                        <td>
                            <div class="btn-group">
                                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Acciones <span class="glyphicon glyphicon-triangle-bottom"></span>
                                </button>

                                <div class="dropdown-menu" style="padding:10px">
                                    <a href="#" data-toggle="modal" data-target="#Efectivo_@itemd.idReferido"><b>Ingresar Pago</b></a>
                                    <div class="dropdown-divider"></div>
                                    <a href="#" data-toggle="modal" data-target="#Conciliar_@itemd.idReferido"><b>Conciliar con Ingresos</b></a>
                                    <div class="dropdown-divider"></div>
                                </div>

                                @*ALERT INGRESAR EFECTIVO*@

                                <form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/EditarEfectivo")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Efectivo_@itemd.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>¿Desea ingresar PAGO a @itemd.Nombre?</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@itemd.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />

                                                        <label for="recipient-name" class="col-form-label">Precio de EPIs:</label>
                                                        <b>$@itemd.PrecioNormal</b><br />
                                                        <label for="recipient-name" class="col-form-label"> Pagos del Gestor:</label>
                                                        <b>$@pago</b><br />
                                                        <label for="recipient-name" class="col-form-label">Cantidad:</label>
                                                        <input type="tel" class="form-control" name="efectivo" />
                                                        <input type="hidden" value="@itemd.idReferido" class="form-control" name="id" />
                                                        <input type="hidden" value="@fechaInicio" class="form-control" name="fecha1" />
                                                        <input type="hidden" value="@FECHAFS" class="form-control" name="fecha2" />
                                                        <input type="hidden" value="@FechaAhora" class="form-control" name="fechaAhora" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>

                                @*ALERT PARA CONCILIAR CON INGRESOS*@
                                <form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/ConciliarIngresos")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Conciliar_@itemd.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>Usted conciliara epis de @itemd.Nombre</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@itemd.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />
                                                       
                                                        <label for="recipient-name" class="col-form-label">Cantidad:</label>
                                                        <input type="tel" class="form-control" name="efectivo" />
                                                        <input type="hidden" value="@itemd.idReferido" class="form-control" name="id" />
                                                        <input type="hidden" value="@fechaInicio" class="form-control" name="fecha1" />
                                                        <input type="hidden" value="@FECHAFS" class="form-control" name="fecha2" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            }
        }


        @*AQUI EMPIEZA LA PARTE DE LA TABLA DE LOS EPIS NORMALES*@
        @{

            foreach (var item in referidoN.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullos = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                if (gestoresNoNullos != 0)
                {
                    <tr>
                        <td>
                            <b>@item.Nombre</b><span style="font-size:xx-small"> @item.Tipo</span>
                        </td>
                        @{
                            var precioEpisGeneral = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i);

                            foreach (var kalaka in precioEpisGeneral)
                            {
                                sumaDePrecios += Convert.ToInt32(kalaka.A.M.PrecioEpi);
                            }

                            //NUMERO DE EPIS 
                            int episGestor = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                            <td><span> @episGestor</span></td>
                             <td><span> $@sumaDePrecios.ToString("###,###,###,###")</span></td>

                            }


                        @*PAGO*@

                        <td>

                            @{
                                var precioEpisGeneralP = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i);

                                foreach (var kalaka in precioEpisGeneralP)
                                {
                                    sumaDePreciosP += Convert.ToInt32(kalaka.A.M.PrecioEpi);
                                }

                                if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                                {

                                    saldoMesN = sumaDePrecios;

                                    <span>$@saldoMesN.ToString("###,###,###,###")</span>

                                }

                                else
                                {
                                    if (sumaDePreciosP == 0)
                                    {
                                        <span>$</span>
                                        <span>-----</span>
                                    }

                                    else
                                    {
                                        <span> $@sumaDePreciosP.ToString("###,###,###,###")</span>
                                    }

                                }

                            }
                        </td>


                        @*INGRESO DEL MES*@
                        <td>
                            @{

                                var pG = (from i in db.PagosGestores where i.idReferido == item.idReferido && i.Fecha >= fechaInicio && i.Fecha < fechaFinal select i);

                                foreach (var pagosGes in pG)
                                {

                                    ingresoActual += Convert.ToInt32(pagosGes.PagoIngresado);

                                }

                                <span>$@ingresoActual.ToString("###,###,###,###")</span>

                            }
                        </td>

                        @*SALDO DEL MES*@
                        <td>
                              @{
                                  saldoMesA = (ingresoActual + sumaDePreciosP) - sumaDePrecios;

                                  if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                                  {

                                      saldoMesA = 0;

                                    <span>$@saldoMesA.ToString("###,###,###,###")</span>

                                 }

                                 else
                                 {
                                     if (saldoMesA < 0)
                                     {
                                         saldoMesA = saldoMesA * (-1);

                                        <span>($@saldoMesA.ToString("###,###,###,###"))</span>
                                     }

                                     else
                                     {
                                        <span>$@saldoMesA.ToString("###,###,###,###")</span>

                                     }

                                 }
                                 ingresoActual = 0;

                            }
                        </td>
                               

                         @*INGRESOS TOTALES NORMALES*@
                        <td>
                             @{
                                    var ingresosTotalesNormales = (from i in db.Referido where i.idReferido == item.idReferido select i);

                                    foreach (var ingresosTN in ingresosTotalesNormales)
                                    {

                                        ingresosTotalesN = Convert.ToInt32(ingresosTN.Efectivo);

                                    }

                                    <span>$@ingresosTotalesN.ToString("###,###,###,###")</span>

                                }
                        </td>


                        @*SALDO TOTAL*@
                        <td>
                            @{

                                var sTN = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicioModulo select i);

                                foreach (var saldoTT in sTN)
                                {
                                    saldoTv1N += Convert.ToInt32(saldoTT.A.M.PrecioEpi);
                                }

                                var precioEpisGeneralPTotales = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.FechaCita >= fechaInicioModulo select i);

                                foreach (var kalaka in precioEpisGeneralPTotales)
                                {
                                    sumaPagadosTN += Convert.ToInt32(kalaka.A.M.PrecioEpi);
                                }

                                saldoTotalN = (sumaPagadosTN + ingresosTotalesN) - saldoTv1N;

                                if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                                {

                                    saldoTotalN = 0;

                                    <span>$@saldoTotalN.ToString("###,###,###,###")</span>

                                }

                                else
                                {
                                    if (saldoTotalN < 0)
                                    {
                                        saldoTotalN = saldoTotalN * (-1);
                                        <span>($@saldoTotalN.ToString("###,###,###,###"))</span>
                                    }

                                    else
                                    {
                                        <span>$@saldoTotalN.ToString("###,###,###,###")</span>

                                    }

                                }
                            }
                        </td>

                        <td>

                            @{
                                var estatus = from i in db.Cita where i.CanalTipo == item.Tipo && i.ReferidoPor == item.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                                string texto = "";

                                foreach (var i in estatus)
                                {
                                    if (i.FechaCita < DateTime.Today.AddDays(-30))
                                    {
                                        texto = "text-danger";
                                        break;
                                    }
                                    else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                    {
                                        texto = "text-warning";
                                        break;
                                    }
                                    else
                                    {
                                        texto = "text-success";
                                        break;
                                    }
                                }

                                <div style="width:2px;"></div>
                                <span class="@texto">•</span>

                                sumaDePrecios = 0;
                                sumaDePreciosP = 0;
                                saldoTv1N = 0;
                                sumaPagadosTN = 0;

                            }

                        </td>

                        <td>
                            <div class="btn-group">
                                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Acciones <span class="glyphicon glyphicon-triangle-bottom"></span>
                                </button>

                                <div class="dropdown-menu" style="padding:10px">
                                    <a href="#" data-toggle="modal" data-target="#Efectivo_@item.idReferido"><b>Ingresar Pago</b></a>
                                    <div class="dropdown-divider"></div>
                                    <a href="#" data-toggle="modal" data-target="#Conciliar_@item.idReferido"><b>Conciliar con Ingresos</b></a>
                                    <div class="dropdown-divider"></div>
                                </div>


                                @*ALERT INGRESAR EFECTIVO*@

                                <form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/EditarEfectivo")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Efectivo_@item.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>¿Desea ingresar PAGO a @item.Nombre?</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@item.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />

                                                        <label for="recipient-name" class="col-form-label">Precio de EPIs:</label>
                                                        <b>$@item.PrecioNormal</b><br />
                                                        <label for="recipient-name" class="col-form-label"> Pagos del Gestor:</label>
                                                        <b>$@pago</b><br />
                                                        <label for="recipient-name" class="col-form-label">Cantidad:</label>
                                                        <input type="tel" class="form-control" name="efectivo" />
                                                        <input type="hidden" value="@item.idReferido" class="form-control" name="id" />
                                                        <input type="hidden" value="@fechaInicio" class="form-control" name="fecha1" />
                                                        <input type="hidden" value="@FECHAFS" class="form-control" name="fecha2" />
                                                        <input type="hidden" value="@FechaAhora" class="form-control" name="fechaAhora" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>



                                @*ALERT PARA CONCILIAR CON INGRESOS*@
                                <form method="post" enctype="multipart/form-data" action="@Url.Content("~/Contabilidad/ConciliarIngresos")">
                                    @Html.AntiForgeryToken()
                                    <div class="modal fade" id="Conciliar_@item.idReferido" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h4 class="modal-title" id="exampleModalLabel"><b>Usted conciliara epis de @item.Nombre</b></h4>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="form-group" style="width:60%; min-width:320px">
                                                        <label for="recipient-name" class="col-form-label">Gestor/Canal:</label>
                                                        <b>@item.Nombre</b><br />
                                                        <label for="recipient-name" class="col-form-label">Fecha Cita:</label>
                                                        <b>@Convert.ToDateTime(fechaInicio).ToString("dd-MMMM-yyyy")</b><br />

                                                        <input type="hidden" value="@item.idReferido" class="form-control" name="id" />
                                                        <input type="hidden" value="@fechaInicio" class="form-control" name="fecha1" />
                                                        <input type="hidden" value="@FECHAFS" class="form-control" name="fecha2" />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </td>
                    </tr>

                }

            }
        }

    </table>
</div>




@*TABLE INVISIBLE PARA DESCARGA DE EXCEL*@

<div class="tablaScroll" style="min-height: 300px; max-height: 450px; display: none">
    <table id="Excel" class="table  table-hover tablas table-bordered" style="color: #2F2D6B">
        <thead style="color:white">
            <tr>
                <th>Gestor/Canal</th>
                <th>EPIs Totales</th>
                <th>Importe</th>
                <th>Pago</th>
                <th>Ingresos</th>
                <th>Saldo</th>
                <th>Estatus</th>
            </tr>
        </thead>

        @*AQUI EMPIEZA LA TABLA DE EPIS ALTERNATIVOS*@
        @{
            foreach (var itemd in db.Referido.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullosAlt = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                if (gestoresNoNullosAlt != 0)
                {

                <tr>
                    <td>
                        <b>@itemd.Nombre</b><span style="font-size:xx-small"> @itemd.Tipo</span>
                    </td>

                    @*NUMERO DE EPIS Y IMPORTE*@
                    @{
                        var precioEpisGeneral = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i);

                        foreach (var kalaka in precioEpisGeneral)
                        {
                            sumaDePrecios += Convert.ToInt32(kalaka.PrecioEpi);
                        }

                        //NUMERO DE EPIS
                        int episGestor = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i).Count();

                        <td><span>@episGestor</span></td>
                        <td><span> $@sumaDePrecios.ToString("###,###,###,###")</span></td>

                    }


                    @*PAGO*@
                    <td>
                        @{
                            var precioEpisGeneralP = (from i in modelo1 where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.EstatusCaptura == "Terminado" && i.Conciliado != null && (i.Cuenta == "CONEKTA" || i.Cuenta == "BANCOS") && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i);

                            foreach (var kalaka in precioEpisGeneralP)
                            {
                                sumaDePreciosP += Convert.ToInt32(kalaka.PrecioEpi);
                            }

                            if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                            {

                                saldoMesN = sumaDePrecios;

                                <span>$@saldoMesN.ToString("###,###,###,###")</span>

                            }

                            else
                            {
                                if (sumaDePreciosP == 0)
                                {
                                    <span>$</span>
                                    <span>-----</span>
                                }

                                else
                                {
                                    <span> $@sumaDePreciosP.ToString("###,###,###,###")</span>
                                }

                            }
                        }
                    </td>

                    @*INGRESO DEL MES*@
                    <td>
                        @{

                            var pG = (from i in db.PagosGestores where i.idReferido == itemd.idReferido && i.Fecha >= fechaInicio && i.Fecha < fechaFinal select i);

                            foreach (var pagosGes in pG)
                            {

                                ingresoActualAlt += Convert.ToInt32(pagosGes.PagoIngresado);

                            }

                            <span>$@ingresoActualAlt.ToString("###,###,###,###")</span>

                        }
                    </td>

                    @*SALDO*@
                    <td>
                        @{
                            saldoMesN = (ingresoActualAlt + sumaDePreciosP) - sumaDePrecios;

                            if (itemd.Tipo == "MEDIOS DIGITALES" || itemd.Tipo == "CALL CENTER" || itemd.Tipo == "OTRO")
                            {

                                saldoMesN = 0;

                                <span>$@saldoMesN.ToString("###,###,###,###")</span>

                            }

                            else
                            {
                                if (saldoMesN < 0)
                                {
                                    saldoMesN = saldoMesN * (-1);

                                    <span>($@saldoMesN.ToString("###,###,###,###"))</span>
                                }

                                else
                                {
                                    <span>$@saldoMesN.ToString("###,###,###,###")</span>

                                }

                            }

                            ingresoActualAlt = 0;

                        }
                    </td>

                    @*ESTATUS*@
                    <td>

                        @{
                            var estatus = from i in db.PacienteESP where i.CanalTipo == itemd.Tipo && i.ReferidoPor == itemd.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                            string texto = "";

                            foreach (var i in estatus)
                            {
                                if (i.FechaCita < DateTime.Today.AddDays(-30))
                                {
                                    texto = "text-danger";
                                    break;
                                }
                                else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                {
                                    texto = "text-warning";
                                    break;
                                }
                                else
                                {
                                    texto = "text-success";
                                    break;
                                }
                            }

                            <div style="width:2px;"></div>
                            <span class="@texto">•</span>

                            sumaDePrecios = 0;
                            sumaDePreciosP = 0;
                            saldoTv1 = 0;
                            sumaPagadosTAlt = 0;

                        }

                    </td>

                </tr>
                                }

                            }
        }


        @*AQUI EMPIEZA LA PARTE DE LA TABLA DE LOS EPIS NORMALES*@
        @{

            foreach (var item in db.Referido.OrderBy(o => o.Orden).ThenBy(o => o.Tipo).ThenBy(o => o.Nombre))
            {
                int gestoresNoNullos = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                if (gestoresNoNullos != 0)
                {
                <tr>
                    <td>
                        <b>@item.Nombre</b><span style="font-size:xx-small"> @item.Tipo</span>
                    </td>
                    @{
                        var precioEpisGeneral = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i);

                        foreach (var kalaka in precioEpisGeneral)
                        {
                            sumaDePrecios += Convert.ToInt32(kalaka.A.M.PrecioEpi);
                        }

                        //NUMERO DE EPIS
                        int episGestor = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i).Count();

                        <td><span> @episGestor</span></td>
                        <td><span> $@sumaDePrecios.ToString("###,###,###,###")</span></td>

                    }


                    @*PAGO*@

                    <td>

                        @{
                            var precioEpisGeneralP = (from i in modelo where i.A.M.CanalTipo == item.Tipo && i.A.M.ReferidoPor == item.Nombre && i.B.EstatusCaptura == "Terminado" && i.A.M.Conciliado != null && (i.A.M.Cuenta == "CONEKTA" || i.A.M.Cuenta == "BANCOS") && i.A.M.FechaCita >= fechaInicio && i.A.M.FechaCita < fechaFinal select i);

                            foreach (var kalaka in precioEpisGeneralP)
                            {
                                sumaDePreciosP += Convert.ToInt32(kalaka.A.M.PrecioEpi);
                            }

                            if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                            {

                                saldoMesN = sumaDePrecios;

                                <span>$@saldoMesN.ToString("###,###,###,###")</span>

                            }

                            else
                            {
                                if (sumaDePreciosP == 0)
                                {
                                    <span>$</span>
                                    <span>-----</span>
                                }

                                else
                                {
                                    <span> $@sumaDePreciosP.ToString("###,###,###,###")</span>
                                }

                            }

                        }
                    </td>


                    @*INGRESO DEL MES*@
                    <td>
                        @{

                            var pG = (from i in db.PagosGestores where i.idReferido == item.idReferido && i.Fecha >= fechaInicio && i.Fecha < fechaFinal select i);

                            foreach (var pagosGes in pG)
                            {

                                ingresoActual += Convert.ToInt32(pagosGes.PagoIngresado);

                            }

                            <span>$@ingresoActual.ToString("###,###,###,###")</span>

                        }
                    </td>

                    @*SALDO DEL MES*@
                    <td>
                        @{
                            saldoMesA = (ingresoActual + sumaDePreciosP) - sumaDePrecios;

                            if (item.Tipo == "MEDIOS DIGITALES" || item.Tipo == "CALL CENTER" || item.Tipo == "OTRO")
                            {

                                saldoMesA = 0;

                                <span>$@saldoMesA.ToString("###,###,###,###")</span>

                            }

                            else
                            {
                                if (saldoMesA < 0)
                                {
                                    saldoMesA = saldoMesA * (-1);

                                    <span>($@saldoMesA.ToString("###,###,###,###"))</span>
                                }

                                else
                                {
                                    <span>$@saldoMesA.ToString("###,###,###,###")</span>

                                }

                            }
                            ingresoActual = 0;

                        }
                    </td>

                    <td>

                        @{
                            var estatus = from i in db.Cita where i.CanalTipo == item.Tipo && i.ReferidoPor == item.Nombre && i.TipoPago == "Pendiente de Pago" && i.FechaCita >= fechaInicio && i.FechaCita < fechaFinal select i;

                            string texto = "";

                            foreach (var i in estatus)
                            {
                                if (i.FechaCita < DateTime.Today.AddDays(-30))
                                {
                                    texto = "text-danger";
                                    break;
                                }
                                else if (i.FechaCita < DateTime.Today.AddDays(-15))
                                {
                                    texto = "text-warning";
                                    break;
                                }
                                else
                                {
                                    texto = "text-success";
                                    break;
                                }
                            }

                            <div style="width:2px;"></div>
                            <span class="@texto">•</span>
                            
                                sumaDePrecios = 0;
                                sumaDePreciosP = 0;
                                saldoTv1N = 0;
                                sumaPagadosTN = 0;

                        }

                    </td>
                </tr>

                }

            }
        }

    </table>

</div>